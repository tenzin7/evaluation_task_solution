#!/bin/bash

# Initialize the counter to 3
counter=3

# While loop to give the user 3 attempts if the input is invalid
while [ $counter -ge 1 ]; do

  # User selection to start an application
  echo "Enter which application to start:"
  echo "1. Application 1"
  echo "2. Application 2"
  echo "3. Application 3"

  # Reads the user's input
  read input

  # This conditional statement test the value of variable "input" against the regular expression. 
  if [[ $input =~ ^[123]+$ ]]; then
    
    #Creating Evaluation_Task_Dir directory to store all the files in HOME dir
    mkdir $HOME/Evaluation_Task_Dir/

    #Creating supervisord.conf file by copying the output of echo_supervisord_conf
    echo_supervisord_conf > $HOME/Evaluation_Task_Dir/supervisord.conf 
    
    #Editing supervisord.conf file to add the applications to the configuration file which needs to be run by supervisor.
    
    #Supervisor configurations for Application1
    echo "" >> $HOME/Evaluation_Task_Dir/supervisord.conf
    echo "[program:Application1]" >> $HOME/Evaluation_Task_Dir/supervisord.conf
    echo "command=$HOME/Evaluation_Task_Dir/Application1" >> $HOME/Evaluation_Task_Dir/supervisord.conf
    echo "autostart=false" >> $HOME/Evaluation_Task_Dir/supervisord.conf
    echo "autorestart=false" >> $HOME/Evaluation_Task_Dir/supervisord.conf
    echo "stderr_logfile=$HOME/Evaluation_Task_Dir/Application1.err" >> $HOME/Evaluation_Task_Dir/supervisord.conf 
    echo "stdout_logfile=$HOME/Evaluation_Task_Dir/Application1.out" >> $HOME/Evaluation_Task_Dir/supervisord.conf
    echo "" >> $HOME/Evaluation_Task_Dir/supervisord.conf

    #Supervisor configurations for Application2
    echo "[program:Application2]" >> $HOME/Evaluation_Task_Dir/supervisord.conf
    echo "command=$HOME/Evaluation_Task_Dir/Application2" >> $HOME/Evaluation_Task_Dir/supervisord.conf
    echo "autostart=false" >> $HOME/Evaluation_Task_Dir/supervisord.conf
    echo "autorestart=false" >> $HOME/Evaluation_Task_Dir/supervisord.conf
    echo "stderr_logfile=$HOME/Evaluation_Task_Dir/Application2.err" >> $HOME/Evaluation_Task_Dir/supervisord.conf
    echo "stdout_logfile=$HOME/Evaluation_Task_Dir/Application2.out" >> $HOME/Evaluation_Task_Dir/supervisord.conf
    echo "" >> $HOME/Evaluation_Task_Dir/supervisord.conf

    #Supervisor configurations for Application3
    echo "[program:Application3]" >> $HOME/Evaluation_Task_Dir/supervisord.conf
    echo "command=$HOME/Evaluation_Task_Dir/Application3" >> $HOME/Evaluation_Task_Dir/supervisord.conf
    echo "autostart=false" >> $HOME/Evaluation_Task_Dir/supervisord.conf
    echo "autorestart=false" >> $HOME/Evaluation_Task_Dir/supervisord.conf
    echo "stderr_logfile=$HOME/Evaluation_Task_Dir/Application3.err" >> $HOME/Evaluation_Task_Dir/supervisord.conf
    echo "stdout_logfile=$HOME/Evaluation_Task_Dir/Application3.out" >> $HOME/Evaluation_Task_Dir/supervisord.conf 
    
    # Starts supervisor from the specified location
    supervisord -c $HOME/Evaluation_Task_Dir/supervisord.conf
    
    # This command only updates the changes. It does not restart any of the managed applications, even if their configuration has changed. New application configurations cannot be started, neither.
    supervisorctl reread
    
    # For loop iterates through each character generated by the sequnce from 1 to length of variable "input". 
    for i in $(seq 1 ${#input}); do
      
      #The "case" statement tests the value of the expression. below expression returns the substring of variable '$input'
      case ${input:i-1:1} in
        1)
          # 'Curl' command downloads the selected application(s) from the github repo using github API & 'supervisorctl' starts Application 1
          curl -o $HOME/Evaluation_Task_Dir/Application1  \
           -H "Accept: application/vnd.github.raw" \
           -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/tenzin7/Evaluataion-Task-applications/contents/test_app_1_darwin_arm64
          chmod +x $HOME/Evaluation_Task_Dir/Application1

          # Restarts the applications whose configuration has changed. After the update command, new application configurations becomes available to start, but do not start automatically until the supervisor service restarts or system reboots (even if autostart option is not disabled)
          supervisorctl update Application1

          # Starts the application
          supervisorctl start Application1
          ;;
        2)
          # Downloads and starts Application 2
          curl -o $HOME/Evaluation_Task_Dir/Application2  \
           -H "Accept: application/vnd.github.raw" \
           -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/tenzin7/Evaluataion-Task-applications/contents/test_app_2_darwin_arm64
          chmod +x $HOME/Evaluation_Task_Dir/Application2
          supervisorctl update Application2
          supervisorctl start Application2
          ;;
        3)
          # Downloads and starts Application 3
          curl -o $HOME/Evaluation_Task_Dir/Application3  \
           -H "Accept: application/vnd.github.raw" \
           -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/tenzin7/Evaluataion-Task-applications/contents/test_app_3_darwin_arm64
          chmod +x $HOME/Evaluation_Task_Dir/Application3
          supervisorctl update Application3
          supervisorctl start Application3
          ;;
      esac
    done
    
    # 'Break' statement will breakout from the while loop if the input variable is valid.
    break
  
  else
    echo "Invalid input. Please try again."
    
    # The value of counter decrementing by 1
    counter=$(( $counter-1 ))
    
    echo "$counter: Attempt Remaining"
  fi
done
